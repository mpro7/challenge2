{"version":3,"sources":["../../src/controllers/user.js"],"names":["User","req","res","next","helpers","LOGGER","info","query","body","username","models","findOne","err","user","boom","badRequest","user1","password","save","u","error","badImplementation","debug","userWithoutPassword","createdAt","json","comparePassword","isMatch","unauthorized","token","jwt","sign","sub","TokenKey","find","users","usersWithoutPassword","map","params","notFound"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport boom from '@hapi/boom';\nimport helpers from '../helpers';\n\nimport models from '../models';\n\nimport { TokenKey } from '../models';\n\nclass User {\n  constructor() {\n\n  }\n\n  static signup(req, res, next) {\n    helpers.LOGGER.info(\"signup - '/' - called\");\n\n    const query = {};\n\n    if (req.body.username) {\n      query.username = req.body.username;\n    }\n\n    /* */\n    models.User.findOne(query, (err, user) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n\n      if (!user) {\n        const user1 = new models.User({\n          username: req.body.username,\n          password: req.body.password,\n        });\n\n        user1.save((err, u) => {\n          if (err) {\n            helpers.LOGGER.error(`${u.username} not saved to users collection.`);\n\n            next(boom.badImplementation(err));\n          } else {\n            helpers.LOGGER.debug(`${u.username} saved to users collection.`);\n            const userWithoutPassword = (({ username, createdAt }) => ({ username, createdAt }))(u);\n\n            return res.json(userWithoutPassword);\n          }\n        });\n      } else {\n        helpers.LOGGER.error(`${user.username}: Username already existing`);\n        next(boom.badRequest('Username already existing'));\n      };\n    });\n  }\n\n  static async signin(req, res, next) {\n    helpers.LOGGER.info(\"signin - '/' - called\");\n\n    const query = {};\n\n    if (req.body.username) {\n      query.username = req.body.username;\n    }\n\n    /* */\n    models.User.findOne(query, (err, user) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n\n      if (user) {\n        // compare the password now\n        helpers.LOGGER.debug(`${user.username}: let's check the passwords`);\n        helpers.LOGGER.debug(`${req.body.password}: passed password`);\n        user.comparePassword(req.body.password, function(err, isMatch) {\n          if (err) next(boom.unauthorized('Not authorized'));\n    \n          if (isMatch) {\n            helpers.LOGGER.info(`${user.username}: Password match`);\n            const token = jwt.sign({ sub: user.username }, TokenKey);\n\n            const userWithoutPassword = (({ username, createdAt }) => ({ username, createdAt }))(user);\n            userWithoutPassword.token = token;\n            helpers.LOGGER.info(`${user.username}: User Found`);\n\n            return res.json(userWithoutPassword);\n          }\n        });\n      };\n    });\n  }\n\n  static getAll(req, res, next) {\n    helpers.LOGGER.info(\"getAll - '/' - called\");\n\n    const query = {};\n\n    models.User.find(query, (err, users) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n\n      const usersWithoutPassword = users.map(u => {\n        const userWithoutPassword = (({ username, createdAt }) => ({ username, createdAt }))(u);\n        return userWithoutPassword;\n      });\n\n      return res.json(usersWithoutPassword);\n    });\n  }\n\n  static getByUsername(req, res, next) {\n    helpers.LOGGER.info(\"getByUsername - '/:username' - called\");\n\n    const query = {};\n\n    if (req.params.username) {\n      query.username = req.params.username;\n    }\n\n    models.User.findOne(query, (err, user) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n\n      if (user) {\n        const userWithoutPassword = (({ username, createdAt }) => ({ username, createdAt }))(user);\n\n        helpers.LOGGER.debug(`--> ${userWithoutPassword.username}`);\n        return res.json(userWithoutPassword);\n      } \n      next(boom.notFound('User not found'));\n    });\n  }\n}\n\nexport default User;"],"file":"user.js"}