{"version":3,"sources":["../../src/controllers/message.js"],"names":["Message","req","res","next","helpers","LOGGER","info","query","_id","text","user","models","find","err","messages","boom","badRequest","json","findById","params","messageId","message","notFound","body","save","status","Object","entries","forEach","item","key","value","result","remove","send"],"mappings":"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","sourcesContent":["import helpers from '../helpers';\nimport boom from '@hapi/boom';\n\nimport models from '../models';\n\nclass Message {\n  constructor() {\n\n  }\n\n  static getAll(req, res, next) {\n    helpers.LOGGER.info(\"get - '/' - called\");\n    const query = {};\n\n    //eslint-disable-next-line no-underscore-dangle\n    if (req.query._id) {\n      //eslint-disable-next-line no-underscore-dangle\n      query._id = req.query._id;\n    }\n\n    if (req.query.text) {\n      query.text = req.query.text;\n    }\n\n    if (req.query.user) {\n      query.user = req.query.user;\n    }\n\n    models.Message.find(query, (err, messages) => {\n      if (err) {\n        //return res.send(err);\n        next(boom.badRequest(err));\n      }\n      return res.json(messages);\n    });\n  }\n\n  static getById(req, res, next) {\n    helpers.LOGGER.info(\"get - '/:messageId' - called\");\n    models.Message.findById(req.params.messageId, (err, message) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n\n      return res.json(message);\n    });\n  }\n\n  static getAndStoreById(req, res, next) {\n    helpers.LOGGER.info(\"get - '/:messageId' - called\");\n    models.Message.findById(req.params.messageId, (err, message) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n      if (message) {\n        req.message = message;\n        return next();\n      }\n      next(boom.notFound('Message not found'));\n    });\n  }\n\n  static create(req, res) {\n    helpers.LOGGER.info(\"post - '/' - called\");\n    const message = new models.Message(req.body);\n\n    message.save();\n    return res.status(201).json(message);\n  }\n\n  static modify(req, res) {\n    helpers.LOGGER.info(\"put - '/' - called\");\n    const { message } = req;\n    message.user = req.body.user;\n    message.text = req.body.text;\n\n    message.save((err) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n      return res.status(201).json(message);\n    });\n  }\n\n  static patch(req, res) {\n    helpers.LOGGER.info(\"patch - '/' - called\");\n    const { message } = req;\n\n    //eslint-disable-next-line no-underscore-dangle\n    if (message._id) {\n      //eslint-disable-next-line no-underscore-dangle\n      delete message._id;\n    }\n\n    Object.entries(message).forEach((item) => {\n      const key = item[0];\n      const value = item[1];\n\n      message[key] = value;\n    });\n\n    message.save((err) => {\n      if (err) {\n        next(boom.badRequest(err));\n      }\n      return res.status(201).json(message);\n    });\n  }\n\n  static delete(req, res) {\n    helpers.LOGGER.info(\"delete - '/' - called\");\n    const { message } = req;\n    let result = null;\n\n    result = message.remove();\n\n    return res.send(result);\n  }\n\n}\n\nexport default Message;"],"file":"message.js"}